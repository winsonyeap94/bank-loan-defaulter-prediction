# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

train_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/train.csv

test_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/test.csv

submission_dataset:
  type: pandas.CSVDataset
  filepath: data/01_raw/submission.csv

preprocessed_train_dataset:
  type: pandas.FeatherDataset
  filepath: data/02_intermediate/preprocessed_train_dataset.feather

preprocessed_test_dataset:
  type: pandas.FeatherDataset
  filepath: data/02_intermediate/preprocessed_test_dataset.feather

feature_engineered_train_dataset:
  type: pandas.FeatherDataset
  filepath: data/04_feature/feature_engineered_train_dataset.feather

feature_engineered_test_dataset:
  type: pandas.FeatherDataset
  filepath: data/04_feature/feature_engineered_test_dataset.feather

model_input_train:
  type: pandas.FeatherDataset
  filepath: data/05_model_input/model_input_train.feather

model_input_validation:
  type: pandas.FeatherDataset
  filepath: data/05_model_input/model_input_validation.feather

classifier_model:
  type: pickle.PickleDataset
  filepath: data/06_models/classifier_model.pickle
  versioned: false

test_predictions:
  type: pandas.CSVDataset
  filepath: data/07_model_output/test_predictions.csv

evaluation_metrics:
  type: tracking.MetricsDataset
  filepath: data/09_tracking/evaluation_metrics.json

# shuttle_passenger_capacity_plot_exp:
#   type: plotly.PlotlyDataset
#   filepath: data/08_reporting/shuttle_passenger_capacity_plot_exp.json
#   versioned: true
#   plotly_args:
#     type: bar
#     fig:
#       x: shuttle_type
#       y: passenger_capacity
#       orientation: h
#     layout:
#       xaxis_title: Shuttles
#       yaxis_title: Average passenger capacity
#       title: Shuttle Passenger capacity

# shuttle_passenger_capacity_plot_go:
#   type: plotly.JSONDataset
#   filepath: data/08_reporting/shuttle_passenger_capacity_plot_go.json
#   versioned: true

# dummy_confusion_matrix:
#   type: matplotlib.MatplotlibWriter
#   filepath: data/08_reporting/dummy_confusion_matrix.png
#   versioned: true
